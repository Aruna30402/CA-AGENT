import React, { useState, useRef, useEffect } from 'react';
import { Send, MessageCircle, Bot, User, Lightbulb, BarChart3, Users, TrendingUp, X, Shield, Target, AlertTriangle, Zap, ChevronRight } from 'lucide-react';
import { ProductInput, Competitor, ChatMessage } from '../types';

interface ChatSidebarProps {
  isOpen: boolean;
  onClose: () => void;
  productInput: ProductInput;
  competitors: Competitor[];
}

interface ChatMessageWithSuggestions extends ChatMessage {
  suggestions?: string[];
}

export default function ChatSidebar({ isOpen, onClose, productInput, competitors }: ChatSidebarProps) {
  const [messages, setMessages] = useState<ChatMessageWithSuggestions[]>([
    {
      id: '1',
      type: 'assistant',
      content: `Hello! I'm your AI assistant for competitor analysis. I can help you understand insights about ${productInput.productName || 'your product'} and your ${competitors.length} tracked competitors. Ask me anything about their strengths, weaknesses, opportunities, threats, pricing, features, or market positioning!`,
      timestamp: new Date(),
      suggestions: [
        "What are my competitors' main weaknesses?",
        "What pricing strategy should I consider?",
        "Which market opportunities should I pursue first?",
        "How can I differentiate from existing competitors?"
      ]
    }
  ]);
  const [inputMessage, setInputMessage] = useState('');
  const [isTyping, setIsTyping] = useState(false);
  const messagesEndRef = useRef<HTMLDivElement>(null);

  const scrollToBottom = () => {
    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });
  };

  useEffect(() => {
    scrollToBottom();
  }, [messages]);

  const generateResponse = (userMessage: string): { content: string; suggestions: string[] } => {
    const message = userMessage.toLowerCase();
    const competitorNames = competitors.map(c => c.name).join(', ');
    
    // SWOT Analysis questions
    if (message.includes('strength') || message.includes('strong')) {
      return {
        content: `## üõ°Ô∏è **COMPETITOR STRENGTHS ANALYSIS**

**KEY FINDINGS:**

üèÜ **Brand Recognition & Market Presence**
‚Ä¢ ${competitors[0]?.name || 'Leading competitors'} have established dominant market positions
‚Ä¢ High user retention rates (85%+ for top players)
‚Ä¢ Strong word-of-mouth and organic growth

üîó **Integration Ecosystem**
‚Ä¢ Slack leads with 2,000+ app integrations
‚Ä¢ Microsoft Teams leverages Office 365 ecosystem
‚Ä¢ Deep API capabilities enable custom workflows

‚ö° **Performance & Reliability**
‚Ä¢ 99.9% uptime across major platforms
‚Ä¢ Consistent service quality during peak usage
‚Ä¢ Robust infrastructure handling millions of users

üéØ **Customer Support Excellence**
‚Ä¢ Multi-channel support (chat, email, phone)
‚Ä¢ Comprehensive documentation and training
‚Ä¢ Active community forums and user groups

**STRATEGIC IMPACT:** These strengths create high switching costs and customer loyalty, making market entry challenging but not impossible.
`,
        suggestions: [
          "How can I compete against these strong brand positions?",
          "What weaknesses do these competitors have that I can exploit?",
          "Which competitor strength is most vulnerable to disruption?",
          "What's the cost to build similar integration ecosystems?"
        ]
      };
    }
    
    if (message.includes('weakness') || message.includes('weak')) {
      return {
        content: `## ‚ö†Ô∏è **COMPETITOR WEAKNESSES ANALYSIS**

**CRITICAL VULNERABILITIES IDENTIFIED:**

üé® **Limited Customization Options**
‚Ä¢ Most platforms offer rigid interface designs
‚Ä¢ Power users frustrated by lack of personalization
‚Ä¢ Enterprise clients need more branding control
‚Ä¢ **Opportunity:** Build highly customizable UI/UX

üí∞ **Complex Pricing Structures**
‚Ä¢ Confusing tier systems (Slack has 4+ pricing levels)
‚Ä¢ Hidden costs and unexpected charges
‚Ä¢ Small businesses struggle to choose right plan
‚Ä¢ **Opportunity:** Transparent, simple pricing model

üì± **Mobile Experience Gaps**
‚Ä¢ Desktop-first design philosophy
‚Ä¢ Mobile apps often lag behind web versions
‚Ä¢ Poor offline functionality across platforms
‚Ä¢ **Opportunity:** Mobile-first approach

üîå **Integration Complexity**
‚Ä¢ Setup requires technical expertise
‚Ä¢ Limited no-code integration options
‚Ä¢ Poor user experience for non-technical users
‚Ä¢ **Opportunity:** One-click integrations

**STRATEGIC ADVANTAGE:** These weaknesses represent clear differentiation opportunities where you can outperform established players.
`,
        suggestions: [
          "Which weakness should I prioritize attacking first?",
          "How can I turn these weaknesses into my competitive advantages?",
          "What specific features could exploit these gaps?",
          "How much would it cost to build better mobile experience?"
        ]
      };
    }
    
    if (message.includes('opportunit') || message.includes('growth')) {
      return {
        content: `## üöÄ **MARKET OPPORTUNITIES ANALYSIS**

**HIGH-IMPACT GROWTH OPPORTUNITIES:**

ü§ñ **AI Integration Revolution**
‚Ä¢ Market demand for AI-powered features growing 300% annually
‚Ä¢ Opportunities: Smart summarization, automated workflows, predictive analytics
‚Ä¢ Current gap: Most competitors have basic AI, not deep integration
‚Ä¢ **Market size:** $15B+ AI collaboration market by 2026

üåç **Emerging Markets Expansion**
‚Ä¢ 40% growth in collaboration tool adoption in developing regions
‚Ä¢ Less saturated markets in Asia, Africa, Latin America
‚Ä¢ Local competitors often lack enterprise features
‚Ä¢ **Revenue potential:** $5B+ untapped market

üè¢ **Small Business Underserved Segment**
‚Ä¢ 67% of SMBs find current solutions too complex/expensive
‚Ä¢ Need: Simple setup, affordable pricing, essential features only
‚Ä¢ Current solutions over-engineered for small teams
‚Ä¢ **Market size:** 30M+ small businesses globally

üè• **Industry-Specific Solutions**
‚Ä¢ Healthcare: HIPAA compliance + specialized workflows
‚Ä¢ Education: Student collaboration + grading integration
‚Ä¢ Finance: SOX compliance + secure document sharing
‚Ä¢ **Combined market:** $8B+ vertical opportunities

**STRATEGIC RECOMMENDATION:** Focus on 1-2 opportunities initially for maximum impact and resource efficiency.
`,
        suggestions: [
          "Which opportunity has the fastest path to revenue?",
          "What's the competitive landscape in emerging markets?",
          "How do I validate demand for industry-specific features?",
          "What's the minimum investment needed for AI integration?"
        ]
      };
    }
    
    if (message.includes('threat') || message.includes('risk')) {
      return {
        content: `## üö® **MARKET THREATS ANALYSIS**

**CRITICAL THREATS TO MONITOR:**

üè¢ **Tech Giant Dominance**
‚Ä¢ Microsoft Teams bundled with Office 365 (300M+ users)
‚Ä¢ Google Workspace integration advantage
‚Ä¢ Apple's enterprise push with business tools
‚Ä¢ **Risk level:** EXTREME - Deep pockets, existing user bases

üìâ **Economic Pressure Impact**
‚Ä¢ 23% of businesses reducing software spending in 2024
‚Ä¢ Longer sales cycles for new tools
‚Ä¢ Increased price sensitivity across all segments
‚Ä¢ **Risk level:** HIGH - Direct revenue impact

‚öñÔ∏è **Regulatory Compliance Burden**
‚Ä¢ GDPR, CCPA, and emerging privacy laws
‚Ä¢ Increased compliance costs (avg $2M+ annually)
‚Ä¢ Data localization requirements
‚Ä¢ **Risk level:** MEDIUM - Manageable with planning

üÜì **Open Source Competition**
‚Ä¢ Mattermost, Rocket.Chat gaining enterprise features
‚Ä¢ Zero licensing costs attractive during budget cuts
‚Ä¢ Community-driven development accelerating
‚Ä¢ **Risk level:** MEDIUM - Quality gap closing

üìä **Market Saturation Reality**
‚Ä¢ 200+ collaboration tools in market
‚Ä¢ Customer acquisition costs rising 40% annually
‚Ä¢ Differentiation becoming increasingly difficult
‚Ä¢ **Risk level:** HIGH - Harder to stand out

**MITIGATION STRATEGY:** Focus on unique value propositions and underserved niches to avoid direct competition with giants.
`,
        suggestions: [
          "How can I compete against Microsoft's bundling strategy?",
          "What's the best way to differentiate in a saturated market?",
          "How do I prepare for economic downturns affecting my market?",
          "What's my risk level compared to these threats?"
        ]
      };
    }
    
    // Competitor-specific questions
    if (message.includes('competitor') || message.includes('compare')) {
      return {
        content: `## üèÜ **COMPETITIVE LANDSCAPE OVERVIEW**

**YOUR TRACKED COMPETITORS:** ${competitors.length} companies

**MARKET POSITIONING BREAKDOWN:**

üíº **Enterprise Leaders**
‚Ä¢ **Microsoft Teams:** Office 365 integration, enterprise security
‚Ä¢ **Cisco Webex:** Enterprise-grade video, compliance focus
‚Ä¢ **Slack:** Premium UX, extensive app ecosystem

üë• **Team-Focused Players**
‚Ä¢ **Discord:** Community building, voice-first approach
‚Ä¢ **Google Meet:** Simple video, Google Workspace integration
‚Ä¢ **Mattermost:** Open-source, developer-friendly

**COMPETITIVE ADVANTAGES BY PLAYER:**

üéØ **Slack**
‚Ä¢ Best-in-class user experience design
‚Ä¢ 2,000+ integrations marketplace
‚Ä¢ Strong developer community

üè¢ **Microsoft Teams**
‚Ä¢ Bundled with Office 365 (huge advantage)
‚Ä¢ Enterprise security and compliance
‚Ä¢ Aggressive pricing strategy

üéÆ **Discord**
‚Ä¢ Persistent voice channels innovation
‚Ä¢ Gaming/creative community dominance
‚Ä¢ Freemium model success

üìπ **Zoom**
‚Ä¢ Superior video quality and reliability
‚Ä¢ Simple, intuitive interface
‚Ä¢ Strong brand recognition

**KEY INSIGHT:** Each competitor owns a specific niche - your opportunity lies in finding an underserved segment or creating a better hybrid solution.
`,
        suggestions: [
          "Which competitor should I be most worried about?",
          "What's the biggest gap in the current market?",
          "How do these competitors acquire new customers?",
          "What's each competitor's main weakness I can exploit?"
        ]
      };
    }
    
    // Pricing questions
    if (message.includes('price') || message.includes('pricing') || message.includes('cost')) {
      const pricingInfo = competitors.map(c => `${c.name}: ${c.pricing.startingPrice} ${c.pricing.currency} (${c.pricing.model})`).join(', ');
      return {
        content: `## üí∞ **COMPETITIVE PRICING ANALYSIS**

**CURRENT PRICING LANDSCAPE:**

${competitors.map(c => `‚Ä¢ **${c.name}:** ${c.pricing.startingPrice} ${c.pricing.currency} (${c.pricing.model})`).join('\n')}

**PRICING STRATEGY BREAKDOWN:**

ü•á **Premium Positioning (Slack)**
‚Ä¢ $7.25/month starting price
‚Ä¢ Justification: Superior UX + extensive integrations
‚Ä¢ Target: Companies prioritizing user experience
‚Ä¢ Success factor: Brand strength allows premium pricing

üí™ **Aggressive Pricing (Microsoft Teams)**
‚Ä¢ $4.00/month starting price
‚Ä¢ Strategy: Bundle with Office 365 for competitive advantage
‚Ä¢ Target: Cost-conscious enterprises
‚Ä¢ Success factor: Ecosystem lock-in reduces price sensitivity

üÜì **Freemium Models (Discord, Mattermost)**
‚Ä¢ Free tier with premium upgrades
‚Ä¢ Strategy: High user acquisition, convert to paid
‚Ä¢ Target: Price-sensitive users and communities
‚Ä¢ Success factor: Network effects drive upgrades

**PRICING RECOMMENDATIONS FOR YOUR PRODUCT:**

üéØ **Sweet Spot:** $5-8/month for SMB market
‚Ä¢ Undercuts Slack's premium pricing
‚Ä¢ Offers more value than Teams' basic tier
‚Ä¢ Positions above free alternatives

üìä **Pricing Psychology:**
‚Ä¢ $6.99 feels significantly cheaper than $7.25
‚Ä¢ Annual discounts (20%+) encourage longer commitments
‚Ä¢ Clear feature differentiation between tiers
`,
        suggestions: [
          "What pricing model works best for my target market?",
          "How do I justify premium pricing against free alternatives?",
          "Should I offer a freemium model or paid-only?",
          "What's the optimal price point for my market segment?"
        ]
      };
    }
    
    // Feature questions
    if (message.includes('feature') || message.includes('functionality')) {
      return {
        content: `## ‚ö° **FEATURE LANDSCAPE ANALYSIS**

**UNIVERSAL CORE FEATURES** (Table Stakes):
‚úÖ Real-time messaging and chat
‚úÖ Video conferencing capabilities
‚úÖ File sharing and storage
‚úÖ Basic integrations with popular tools
‚úÖ User management and permissions

**COMPETITIVE DIFFERENTIATORS:**

ü§ñ **Slack's Unique Features**
‚Ä¢ Workflow Builder (visual automation)
‚Ä¢ Advanced search with filters
‚Ä¢ Custom emoji and reactions
‚Ä¢ Thread organization system

üè¢ **Microsoft Teams' Advantages**
‚Ä¢ Deep Office 365 integration
‚Ä¢ SharePoint document collaboration
‚Ä¢ Advanced meeting features (breakout rooms)
‚Ä¢ Enterprise-grade security controls

üéÆ **Discord's Innovations**
‚Ä¢ Persistent voice channels (always-on)
‚Ä¢ Server-based community structure
‚Ä¢ Screen sharing with low latency
‚Ä¢ Gaming-optimized voice quality

üìπ **Zoom's Specialization**
‚Ä¢ Superior video quality and compression
‚Ä¢ Webinar and large meeting capabilities
‚Ä¢ Virtual backgrounds and filters
‚Ä¢ Recording and transcription features

**üéØ IDENTIFIED FEATURE GAPS** (Your Opportunities):

üì± **Mobile-First Experience**
‚Ä¢ Current gap: All competitors designed desktop-first
‚Ä¢ Opportunity: Native mobile experience with gesture controls

‚ö° **Simplified Onboarding**
‚Ä¢ Current gap: Complex setup processes (15+ minutes)
‚Ä¢ Opportunity: One-click setup under 2 minutes

üè• **Industry-Specific Features**
‚Ä¢ Current gap: Generic solutions for all industries
‚Ä¢ Opportunity: Healthcare, education, finance specializations

üß† **Intuitive AI Integration**
‚Ä¢ Current gap: AI feels like add-on feature
‚Ä¢ Opportunity: AI-native design from ground up
`,
        suggestions: [
          "Which feature gap has the biggest market opportunity?",
          "How do I prioritize feature development against competitors?",
          "What features do users want that competitors don't offer?",
          "What's the minimum viable feature set to compete?"
        ]
      };
    }
    
    // Market questions
    if (message.includes('market') || message.includes('segment')) {
      const segment = productInput.marketSegment === 'b2b' ? 'B2B' : productInput.marketSegment === 'b2c' ? 'B2C' : 'your target';
      return {
        content: `## üìä **${segment.toUpperCase()} MARKET ANALYSIS**

**MARKET FUNDAMENTALS:**
‚Ä¢ **Total Market Size:** $47.2B globally (2024)
‚Ä¢ **Growth Rate:** 12.3% CAGR through 2028
‚Ä¢ **Projected Size:** $74.8B by 2028

**${segment.toUpperCase()} MARKET SPECIFICS:**

${segment === 'B2B' ? `
üè¢ **B2B Market Dynamics**
‚Ä¢ **Market Share:** $38.1B (81% of total market)
‚Ä¢ **Key Drivers:** Remote work, digital transformation
‚Ä¢ **Buyer Behavior:** Committee decisions, longer sales cycles
‚Ä¢ **Price Sensitivity:** Medium (ROI-focused)

**B2B SEGMENTS BY SIZE:**
‚Ä¢ Enterprise (1000+ employees): 45% of revenue
‚Ä¢ Mid-market (100-999 employees): 35% of revenue  
‚Ä¢ Small business (10-99 employees): 20% of revenue

**B2B COMPETITIVE INTENSITY:**
‚Ä¢ High in enterprise (Microsoft, Slack dominate)
‚Ä¢ Medium in mid-market (more fragmented)
‚Ä¢ Low in small business (underserved)
` : segment === 'B2C' ? `
üë• **B2C Market Dynamics**
‚Ä¢ **Market Share:** $9.1B (19% of total market)
‚Ä¢ **Key Drivers:** Social connectivity, gaming, communities
‚Ä¢ **Buyer Behavior:** Individual decisions, quick adoption
‚Ä¢ **Price Sensitivity:** High (freemium models popular)

**B2C SEGMENTS:**
‚Ä¢ Gaming communities: 40% of B2C market
‚Ä¢ Social groups: 35% of B2C market
‚Ä¢ Educational: 25% of B2C market

**B2C COMPETITIVE INTENSITY:**
‚Ä¢ High in gaming (Discord dominates)
‚Ä¢ Medium in social (fragmented)
‚Ä¢ Low in education (emerging)
` : `
üéØ **MARKET SEGMENTATION GUIDANCE**
‚Ä¢ **B2B Focus:** Higher revenue per user, longer retention
‚Ä¢ **B2C Focus:** Faster growth, network effects
‚Ä¢ **Hybrid Approach:** Freemium B2C ‚Üí Premium B2B conversion
`}

**KEY MARKET TRENDS:**
‚Ä¢ üìà Remote work normalization (permanent shift)
‚Ä¢ ü§ñ AI integration becoming standard expectation
‚Ä¢ üîí Security and compliance increasingly critical
‚Ä¢ üì± Mobile-first usage patterns emerging

**YOUR STRATEGIC POSITIONING:**
${segment} market offers significant opportunities in underserved niches, particularly industry-specific solutions and simplified user experiences.
`,
        suggestions: [
          `What's the best market entry strategy for ${segment}?`,
          "Which market segment has the least competition?",
          "How do I validate market demand before building?",
          "What's the customer acquisition cost in this market?"
        ]
      };
    }
    
    // Strategy questions
    if (message.includes('strategy') || message.includes('recommend') || message.includes('suggest')) {
      return {
        content: `## üéØ **STRATEGIC RECOMMENDATIONS**

**TOP 5 STRATEGIC PRIORITIES** (Ranked by Impact √ó Feasibility):

**1. üì± MOBILE-FIRST DESIGN STRATEGY**
‚Ä¢ **Why:** All competitors are desktop-first, mobile is afterthought
‚Ä¢ **Impact:** High - 60% of users prefer mobile for quick tasks
‚Ä¢ **Feasibility:** High - No technical barriers
‚Ä¢ **Timeline:** 3-6 months
‚Ä¢ **Investment:** Medium

**2. üí∞ SIMPLIFIED PRICING MODEL**
‚Ä¢ **Why:** Competitors have confusing tier structures
‚Ä¢ **Impact:** High - 40% of SMBs abandon due to pricing complexity
‚Ä¢ **Feasibility:** High - Business model decision
‚Ä¢ **Timeline:** Immediate
‚Ä¢ **Investment:** Low

**3. üè• INDUSTRY SPECIALIZATION**
‚Ä¢ **Why:** Generic solutions don't meet specific industry needs
‚Ä¢ **Impact:** Medium-High - Premium pricing possible
‚Ä¢ **Feasibility:** Medium - Requires domain expertise
‚Ä¢ **Timeline:** 6-12 months
‚Ä¢ **Investment:** High

**4. ü§ñ AI-NATIVE APPROACH**
‚Ä¢ **Why:** Competitors bolt AI onto existing platforms
‚Ä¢ **Impact:** High - AI becoming table stakes
‚Ä¢ **Feasibility:** Medium - Technical complexity
‚Ä¢ **Timeline:** 9-18 months
‚Ä¢ **Investment:** Very High

**5. ‚ö° SUPERIOR ONBOARDING**
‚Ä¢ **Why:** Competitors take 15+ minutes to get value
‚Ä¢ **Impact:** Medium - Reduces churn, improves adoption
‚Ä¢ **Feasibility:** High - UX/UI optimization
‚Ä¢ **Timeline:** 2-4 months
‚Ä¢ **Investment:** Medium

**RECOMMENDED EXECUTION ORDER:**
1. Start with pricing simplification (quick win)
2. Build mobile-first experience (competitive advantage)
3. Perfect onboarding flow (retention boost)
4. Choose industry specialization (market focus)
5. Integrate AI capabilities (future-proofing)
`,
        suggestions: [
          "How do I validate which strategy will work best?",
          "What's the minimum viable product for mobile-first approach?",
          "Which industry should I specialize in first?",
          "What's the timeline and budget for each strategy?"
        ]
      };
    }
    
    // Performance questions
    if (message.includes('performance') || message.includes('speed') || message.includes('reliability')) {
      return {
        content: `## ‚ö° **PERFORMANCE BENCHMARKS ANALYSIS**

**UPTIME & RELIABILITY STANDARDS:**
‚Ä¢ **Industry Standard:** 99.9% uptime (8.76 hours downtime/year)
‚Ä¢ **Leaders:** Zoom (99.99%), Microsoft Teams (99.95%)
‚Ä¢ **Laggards:** Smaller players often struggle with 99.5%

**DETAILED PERFORMANCE BREAKDOWN:**

üîç **Slack Performance Profile**
‚Ä¢ **Strengths:** Lightning-fast search (sub-second results)
‚Ä¢ **Weaknesses:** Slows significantly with 10,000+ users
‚Ä¢ **Memory usage:** High (500MB+ for large workspaces)
‚Ä¢ **Load times:** 2-3 seconds average

üè¢ **Microsoft Teams Performance**
‚Ä¢ **Strengths:** Excellent Office integration speed
‚Ä¢ **Weaknesses:** Resource-heavy (1GB+ RAM usage)
‚Ä¢ **Video quality:** Good but inconsistent
‚Ä¢ **Load times:** 4-5 seconds average

üéÆ **Discord Performance Excellence**
‚Ä¢ **Strengths:** Handles 100,000+ concurrent voice users
‚Ä¢ **Low latency:** 20-40ms for voice
‚Ä¢ **Efficient:** Lightweight client design
‚Ä¢ **Weakness:** Text search slower than Slack

üìπ **Zoom Performance Leadership**
‚Ä¢ **Video quality:** Industry-leading compression
‚Ä¢ **Bandwidth efficiency:** 50% better than competitors
‚Ä¢ **Reliability:** Rarely drops calls
‚Ä¢ **Weakness:** Limited text chat features

**üéØ PERFORMANCE OPPORTUNITIES:**

**1. Consistent Cross-Feature Performance**
‚Ä¢ Gap: Most excel in one area, struggle in others
‚Ä¢ Opportunity: Balanced excellence across all features

**2. Large Organization Optimization**
‚Ä¢ Gap: Performance degrades with scale
‚Ä¢ Opportunity: Architecture designed for 100,000+ users

**3. Mobile Performance Parity**
‚Ä¢ Gap: Mobile apps 2-3x slower than desktop
‚Ä¢ Opportunity: Mobile-native performance optimization

**TECHNICAL RECOMMENDATIONS:**
‚Ä¢ Use modern web technologies (WebRTC, WebAssembly)
‚Ä¢ Implement edge computing for global performance
‚Ä¢ Design for horizontal scaling from day one
`,
        suggestions: [
          "What's the most important performance metric to optimize first?",
          "How do I ensure my platform scales better than competitors?",
          "What causes performance issues in large organizations?",
          "What's the technical architecture needed for 99.99% uptime?"
        ]
      };
    }
    
    // Security questions
    if (message.includes('security') || message.includes('privacy') || message.includes('compliance')) {
      return {
        content: `## üîí **SECURITY & COMPLIANCE LANDSCAPE**

**ENTERPRISE SECURITY REQUIREMENTS:**

üìã **Mandatory Compliance Standards**
‚Ä¢ **SOC 2 Type II:** Required for enterprise sales
‚Ä¢ **GDPR:** Essential for European market access
‚Ä¢ **HIPAA:** Critical for healthcare sector
‚Ä¢ **ISO 27001:** Preferred by large enterprises

**COMPETITOR SECURITY STANDINGS:**

üèÜ **Security Leaders**
‚Ä¢ **Microsoft Teams:** Full enterprise compliance suite
‚Ä¢ **Cisco Webex:** Government-grade security features
‚Ä¢ **Zoom:** Post-2020 security overhaul, now excellent

üîç **Security Feature Comparison**
‚Ä¢ **End-to-end encryption:** Zoom ‚úÖ, Teams ‚úÖ, Slack ‚ùå (enterprise only)
‚Ä¢ **Advanced admin controls:** Teams ‚úÖ, Webex ‚úÖ, Discord ‚ùå
‚Ä¢ **Audit logging:** All enterprise players ‚úÖ
‚Ä¢ **Single Sign-On (SSO):** Standard across enterprise tools

**üö® IDENTIFIED SECURITY GAPS:**

**1. User-Friendly Security**
‚Ä¢ **Problem:** Complex admin panels confuse non-technical users
‚Ä¢ **Impact:** 67% of SMBs struggle with security setup
‚Ä¢ **Opportunity:** Consumer-grade usability for enterprise security

**2. Transparent Privacy Practices**
‚Ä¢ **Problem:** Unclear data usage policies
‚Ä¢ **Impact:** Growing user concern about data privacy
‚Ä¢ **Opportunity:** Clear, simple privacy communication

**3. Automated Compliance**
‚Ä¢ **Problem:** Manual compliance management
‚Ä¢ **Impact:** High operational overhead for IT teams
‚Ä¢ **Opportunity:** One-click compliance setup

**SECURITY STRATEGY RECOMMENDATIONS:**

üéØ **"Security by Default" Approach**
‚Ä¢ Enable all security features automatically
‚Ä¢ No complex configuration required
‚Ä¢ Clear visual indicators of security status

üìä **Compliance Automation**
‚Ä¢ Automated audit trail generation
‚Ä¢ One-click compliance reports
‚Ä¢ Real-time compliance monitoring

üîê **Zero-Trust Architecture**
‚Ä¢ Assume no implicit trust
‚Ä¢ Verify every user and device
‚Ä¢ Continuous security monitoring
`,
        suggestions: [
          "What security features are most important for my target market?",
          "How do I achieve enterprise security without complexity?",
          "What compliance certifications should I prioritize first?",
          "What's the cost of achieving SOC 2 compliance?"
        ]
      };
    }
    
    // User experience questions
    if (message.includes('user') || message.includes('experience') || message.includes('usability')) {
      return {
        content: `## üé® **USER EXPERIENCE ANALYSIS**

**UX LEADERSHIP RANKINGS:**

ü•á **Slack - UX Gold Standard**
‚Ä¢ **Strengths:** Intuitive interface, excellent information hierarchy
‚Ä¢ **User satisfaction:** 4.4/5 stars average
‚Ä¢ **Onboarding time:** 8-12 minutes average
‚Ä¢ **Learning curve:** Gentle, progressive feature discovery

ü•à **Discord - Community UX Excellence**
‚Ä¢ **Strengths:** Gaming-optimized interface, voice-first design
‚Ä¢ **Innovation:** Persistent voice channels, server structure
‚Ä¢ **User satisfaction:** 4.2/5 stars average
‚Ä¢ **Weakness:** Can overwhelm business users

ü•â **Zoom - Simplicity Focus**
‚Ä¢ **Strengths:** One-click meeting join, minimal interface
‚Ä¢ **User satisfaction:** 4.1/5 stars average
‚Ä¢ **Accessibility:** Excellent for non-technical users
‚Ä¢ **Limitation:** Limited collaboration features

‚ö†Ô∏è **Microsoft Teams - Complexity Struggles**
‚Ä¢ **Weaknesses:** Overwhelming interface, feature bloat
‚Ä¢ **User complaints:** "Too many buttons," "Hard to find features"
‚Ä¢ **Onboarding time:** 15-20 minutes average
‚Ä¢ **Learning curve:** Steep, requires training

**üö® COMMON UX PROBLEMS ACROSS COMPETITORS:**

**1. Interface Overwhelm**
‚Ä¢ Too many features visible simultaneously
‚Ä¢ Poor information hierarchy
‚Ä¢ Cluttered navigation menus

**2. Mobile Experience Failures**
‚Ä¢ Desktop interfaces poorly adapted for mobile
‚Ä¢ Touch targets too small
‚Ä¢ Inconsistent mobile vs desktop features

**3. Complex Onboarding Processes**
‚Ä¢ Average setup time: 15+ minutes
‚Ä¢ Multiple steps with unclear progress
‚Ä¢ Feature discovery happens by accident

**4. Notification Fatigue**
‚Ä¢ Poor notification management
‚Ä¢ No intelligent filtering
‚Ä¢ Users disable notifications entirely

**üéØ YOUR UX COMPETITIVE ADVANTAGES:**

**1. Radical Simplicity**
‚Ä¢ Hide advanced features until needed
‚Ä¢ Progressive disclosure of complexity
‚Ä¢ One primary action per screen

**2. Mobile-First Design**
‚Ä¢ Touch-optimized interface
‚Ä¢ Gesture-based navigation
‚Ä¢ Feature parity across devices

**3. Sub-5-Minute Onboarding**
‚Ä¢ Value delivered in first 2 minutes
‚Ä¢ Smart defaults eliminate configuration
‚Ä¢ Interactive tutorials, not documentation

**4. Intelligent Notifications**
‚Ä¢ AI-powered notification prioritization
‚Ä¢ Context-aware delivery timing
‚Ä¢ User-controlled notification intelligence
`,
        suggestions: [
          "What specific UX improvements would have the biggest impact?",
          "How do I design for both power users and beginners?",
          "What UX metrics should I track against competitors?",
          "How do I test my UX against competitor interfaces?"
        ]
      };
    }
    
    // Integration questions
    if (message.includes('integration') || message.includes('api') || message.includes('connect')) {
      return {
        content: `## üîó **INTEGRATION ECOSYSTEM ANALYSIS**

**INTEGRATION MARKETPLACE LEADERS:**

üèÜ **Slack - Integration King**
‚Ä¢ **Total integrations:** 2,000+ apps
‚Ä¢ **Strategy:** Open API, developer-friendly
‚Ä¢ **Revenue share:** 30% from app marketplace
‚Ä¢ **Top categories:** Productivity, CRM, Development

üè¢ **Microsoft Teams - Ecosystem Leverage**
‚Ä¢ **Total integrations:** 1,000+ apps
‚Ä¢ **Strategy:** Office 365 ecosystem dominance
‚Ä¢ **Advantage:** Native Microsoft app integration
‚Ä¢ **Weakness:** Third-party integration complexity

üìä **Other Players**
‚Ä¢ **Google Meet:** 500+ integrations (Google Workspace focus)
‚Ä¢ **Discord:** 300+ bots and integrations (gaming focus)
‚Ä¢ **Zoom:** 200+ integrations (video-centric)
‚Ä¢ **Mattermost:** 100+ integrations (open-source)

**üéØ CRITICAL INTEGRATION CATEGORIES:**

**Tier 1 - Essential (Must Have)**
‚Ä¢ **CRM:** Salesforce, HubSpot, Pipedrive
‚Ä¢ **Project Management:** Asana, Trello, Monday.com
‚Ä¢ **Development:** GitHub, GitLab, Jira
‚Ä¢ **File Storage:** Google Drive, Dropbox, OneDrive

**Tier 2 - Important (Should Have)**
‚Ä¢ **Calendar:** Google Calendar, Outlook, Calendly
‚Ä¢ **Design:** Figma, Adobe Creative Suite
‚Ä¢ **Analytics:** Google Analytics, Mixpanel
‚Ä¢ **Support:** Zendesk, Intercom, Freshdesk

**Tier 3 - Nice to Have**
‚Ä¢ **Social Media:** Twitter, LinkedIn
‚Ä¢ **E-commerce:** Shopify, WooCommerce
‚Ä¢ **Marketing:** Mailchimp, Constant Contact

**üöÄ INTEGRATION STRATEGY RECOMMENDATIONS:**

**Quality Over Quantity Approach**
‚Ä¢ Focus on top 50 integrations with flawless execution
‚Ä¢ Better than 2,000 mediocre integrations
‚Ä¢ Deep, native-feeling integrations vs basic webhooks

**No-Code Integration Builder**
‚Ä¢ Visual workflow builder (like Zapier)
‚Ä¢ Pre-built templates for common use cases
‚Ä¢ User-friendly integration setup

**API-First Architecture**
‚Ä¢ Comprehensive REST and GraphQL APIs
‚Ä¢ Webhook support for real-time updates
‚Ä¢ Developer-friendly documentation

**Partnership Strategy**
‚Ä¢ Direct partnerships with top 20 tools
‚Ä¢ Co-marketing opportunities
‚Ä¢ Shared customer success initiatives
`,
        suggestions: [
          "Which integrations should I build first for maximum impact?",
          "How do I create better integrations than Slack?",
          "What's the best way to attract third-party developers?",
          "How do I build a developer ecosystem around my product?"
        ]
      };
    }
    
    // Default comprehensive response
    return {
      content: `## üéØ **COMPETITIVE INTELLIGENCE ASSISTANT**

Welcome! I'm your strategic analysis expert, ready to provide detailed insights about your competitive landscape.

**üìä AVAILABLE ANALYSIS AREAS:**
    
üõ°Ô∏è **SWOT Analysis**
‚Ä¢ Comprehensive strengths, weaknesses, opportunities, and threats
‚Ä¢ Evidence-based insights for each competitor
‚Ä¢ Strategic implications and recommendations

üí∞ **Pricing Intelligence**
‚Ä¢ Competitive pricing breakdown and analysis
‚Ä¢ Market positioning strategies
‚Ä¢ Pricing optimization recommendations

‚ö° **Feature Gap Analysis**
‚Ä¢ Detailed feature comparison matrix
‚Ä¢ Unmet market needs identification
‚Ä¢ Product development priorities

üìä **Market Positioning**
‚Ä¢ Competitor positioning strategies
‚Ä¢ Market segment analysis
‚Ä¢ Differentiation opportunities

üéØ **Strategic Recommendations**
‚Ä¢ Actionable business strategy insights
‚Ä¢ Go-to-market recommendations
‚Ä¢ Competitive advantage development

üöÄ **Performance Benchmarks**
‚Ä¢ Technical performance comparisons
‚Ä¢ User experience analysis
‚Ä¢ Optimization opportunities

üîí **Security & Compliance**
‚Ä¢ Security feature comparisons
‚Ä¢ Compliance requirement analysis
‚Ä¢ Risk assessment and mitigation

**CURRENT ANALYSIS SCOPE:**
‚Ä¢ **Your Product:** ${productInput?.productName || 'Your Product'}
‚Ä¢ **Market Segment:** ${productInput?.marketSegment?.replace('_', ' ').toUpperCase() || 'Not specified'}
‚Ä¢ **Tracked Competitors:** ${competitors.length} companies
‚Ä¢ **Analysis Depth:** Comprehensive strategic intelligence
    
**üéØ SUGGESTED STARTING POINTS:**
‚Ä¢ "What are [competitor name]'s main weaknesses?"
‚Ä¢ "What pricing strategy should I consider?"
‚Ä¢ "Which market opportunities should I pursue first?"
‚Ä¢ "How can I differentiate from existing competitors?"`,
      suggestions: [
        "What are the biggest opportunities in this market?",
        "Which competitor should I be most concerned about?",
        "What features do users want that competitors don't offer?",
        "How should I price my product competitively?"
      ]
    };
  };

  const handleSendMessage = async () => {
    if (!inputMessage.trim()) return;

    const userMessage: ChatMessageWithSuggestions = {
      id: Date.now().toString(),
      type: 'user',
      content: inputMessage,
      timestamp: new Date()
    };

    setMessages(prev => [...prev, userMessage]);
    setInputMessage('');
    setIsTyping(true);

    // Simulate AI response delay
    setTimeout(() => {
      const response = generateResponse(inputMessage);
      const assistantMessage: ChatMessageWithSuggestions = {
        id: (Date.now() + 1).toString(),
        type: 'assistant',
        content: response.content,
        timestamp: new Date(),
        suggestions: response.suggestions
      };

      setMessages(prev => [...prev, assistantMessage]);
      setIsTyping(false);
    }, 1500);
  };

  const handleKeyPress = (e: React.KeyboardEvent) => {
    if (e.key === 'Enter' && !e.shiftKey) {
      e.preventDefault();
      handleSendMessage();
    }
  };

  const handleSuggestionClick = (suggestion: string) => {
    setInputMessage(suggestion);
    // Auto-send the suggestion
    setTimeout(() => handleSendMessage(), 100);
  };

  const quickQuestions = [
    { icon: Shield, text: "Competitor strengths", query: "What are the main strengths of my competitors?" },
    { icon: AlertTriangle, text: "Market threats", query: "What threats should I be aware of in this market?" },
    { icon: TrendingUp, text: "Growth opportunities", query: "What opportunities exist for growth and differentiation?" },
    { icon: Target, text: "Strategic recommendations", query: "What strategic recommendations do you have?" },
    { icon: BarChart3, text: "Pricing strategy", query: "How should I position my pricing against competitors?" },
    { icon: Zap, text: "Feature gaps", query: "What feature gaps exist that I could exploit?" }
  ];

  if (!isOpen) return null;

  return (
    <div className="fixed right-0 top-0 h-full w-96 bg-white border-l border-gray-200 shadow-lg z-50 flex flex-col">
      {/* Header */}
      <div className="flex items-center justify-between p-4 border-b border-gray-200">
        <div className="flex items-center space-x-3">
          <div className="w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center">
            <Bot className="w-4 h-4 text-blue-600" />
          </div>
          <div>
            <h3 className="font-semibold text-gray-900">Strategy Assistant</h3>
            <p className="text-xs text-gray-500">Competitive intelligence expert</p>
          </div>
        </div>
        <button
          onClick={onClose}
          className="p-1 rounded-lg hover:bg-gray-100 transition-colors"
        >
          <X className="w-4 h-4 text-gray-500" />
        </button>
      </div>

      {/* Messages */}
      <div className="flex-1 overflow-y-auto p-4 space-y-3">
        {messages.map((message) => (
          <div
            key={message.id}
            className={`flex ${message.type === 'user' ? 'justify-end' : 'justify-start'}`}
          >
            <div className={`flex items-start space-x-2 max-w-[85%] ${
              message.type === 'user' ? 'flex-row-reverse space-x-reverse' : ''
            }`}>
              <div className={`w-6 h-6 rounded-full flex items-center justify-center flex-shrink-0 ${
                message.type === 'user' 
                  ? 'bg-blue-600 text-white' 
                  : 'bg-gray-100 text-gray-600'
              }`}>
                {message.type === 'user' ? (
                  <User className="w-3 h-3" />
                ) : (
                  <Bot className="w-3 h-3" />
                )}
              </div>
              <div className={`rounded-lg px-3 py-2 ${
                message.type === 'user'
                  ? 'bg-blue-600 text-white'
                  : 'bg-gray-100 text-gray-900'
              }`}>
                <div className="text-xs leading-relaxed whitespace-pre-wrap prose prose-xs max-w-none">
                  {message.content.split('\n').map((line, index) => {
                    // Handle markdown-style formatting
                    if (line.startsWith('## ')) {
                      return <div key={index} className="font-bold text-sm mt-2 mb-1">{line.replace('## ', '')}</div>;
                    }
                    if (line.startsWith('**') && line.endsWith('**')) {
                      return <div key={index} className="font-semibold mt-1">{line.replace(/\*\*/g, '')}</div>;
                    }
                    if (line.startsWith('‚Ä¢ ')) {
                      return <div key={index} className="ml-2">{line}</div>;
                    }
                    if (line.startsWith('---')) {
                      return <hr key={index} className="my-2 border-gray-300" />;
                    }
                    if (line.trim() === '') {
                      return <div key={index} className="h-1"></div>;
                    }
                    return <div key={index}>{line}</div>;
                  })}
                </div>
                <p className={`text-xs mt-1 opacity-70`}>
                  {message.timestamp.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}
                </p>
              </div>
            </div>
            
            {/* Follow-up Suggestions */}
            {message.type === 'assistant' && message.suggestions && (
              <div className="mt-3 space-y-1">
                {message.suggestions.map((suggestion, suggestionIndex) => (
                  <button
                    key={suggestionIndex}
                    onClick={() => handleSuggestionClick(suggestion)}
                    className="flex items-center space-x-2 w-full p-2 text-left text-xs text-blue-600 hover:bg-blue-50 rounded-md transition-colors border border-blue-200 hover:border-blue-300"
                  >
                    <ChevronRight className="w-3 h-3 flex-shrink-0" />
                    <span className="truncate">{suggestion}</span>
                  </button>
                ))}
              </div>
            )}
          </div>
        ))}

        {isTyping && (
          <div className="flex justify-start">
            <div className="flex items-start space-x-2">
              <div className="w-6 h-6 bg-gray-100 rounded-full flex items-center justify-center">
                <Bot className="w-3 h-3 text-gray-600" />
              </div>
              <div className="bg-gray-100 rounded-lg px-3 py-2">
                <div className="flex space-x-1">
                  <div className="w-1 h-1 bg-gray-400 rounded-full animate-bounce"></div>
                  <div className="w-1 h-1 bg-gray-400 rounded-full animate-bounce" style={{ animationDelay: '0.1s' }}></div>
                  <div className="w-1 h-1 bg-gray-400 rounded-full animate-bounce" style={{ animationDelay: '0.2s' }}></div>
                </div>
              </div>
            </div>
          </div>
        )}
        <div ref={messagesEndRef} />
      </div>

      {/* Quick Questions */}
      {messages.length <= 1 && (
        <div className="p-3 border-t border-gray-200 bg-gray-50">
          <p className="text-xs font-medium text-gray-700 mb-2">Quick questions:</p>
          <div className="space-y-1">
            {quickQuestions.map((question, index) => {
              const Icon = question.icon;
              return (
                <button
                  key={index}
                  onClick={() => handleSuggestionClick(question.query)}
                  className="flex items-center space-x-2 w-full p-2 text-left text-xs text-gray-600 hover:bg-white hover:text-gray-900 rounded-md transition-colors"
                >
                  <Icon className="w-3 h-3" />
                  <span>{question.text}</span>
                </button>
              );
            })}
          </div>
        </div>
      )}

      {/* Input */}
      <div className="p-3 border-t border-gray-200">
        <div className="flex space-x-2">
          <textarea
            value={inputMessage}
            onChange={(e) => setInputMessage(e.target.value)}
            onKeyPress={handleKeyPress}
            placeholder="Ask about competitors, SWOT, pricing..."
            rows={1}
            className="flex-1 px-2 py-1 border border-gray-300 rounded-md focus:ring-1 focus:ring-blue-600 focus:border-transparent resize-none text-xs"
            style={{ minHeight: '32px', maxHeight: '80px' }}
          />
          <button
            onClick={handleSendMessage}
            disabled={!inputMessage.trim() || isTyping}
            className="px-3 py-1 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors flex items-center justify-center"
          >
            <Send className="w-3 h-3" />
          </button>
        </div>
      </div>
    </div>
  );
}